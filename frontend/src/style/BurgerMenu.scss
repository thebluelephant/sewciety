@import "./Global.scss";

@mixin transition {
  @for $i from 1 through 50 {
    &:nth-child(#{$i}) {
      transition: transform
        1s
        #{$i *
        0.08}s
        cubic-bezier(0.29, 1.4, 0.44, 0.96);
    }
  }
}

@mixin alpha-attribute($attribute, $color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  #{$attribute}: $solid-color;
  #{$attribute}: $color;
}

$text: black;

content {
  z-index: 10;
}
.features {
  font-size: 1rem;
  text-transform: uppercase;
  li {
    width: 100%;
    text-align: center;
    padding: 0.25em;
  }
}

.drawer-list {
  position: fixed;
  z-index: 15;
  left: 0;
  top: 0;
  height: 100vh;
  width: 100vw;
  box-shadow: 10px 0px 15px rgba(24, 94, 224, 0.15);
  transform: translate(-100vw, 0);
  /* ie workaround */
  -ms-transform: translatex(-100vw);
  box-sizing: border-box;
  pointer-events: none;
  padding-top: 125px;
  transition: width 475ms ease-out, transform 450ms ease,
    border-radius 0.8s 0.1s ease;
  border-bottom-right-radius: 100vw;
  @include alpha-attribute("background-color", rgba($green, 1), white);
  @media (min-width: 768px) {
    width: 20vw;
  }
  ul {
    height: 80%;
    width: 100%;
    margin: 0;
    padding: 0;
    overflow: auto;
    overflow-x: hidden;
    pointer-events: auto;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
  }
  li {
    list-style: none;
    text-transform: uppercase;
    pointer-events: auto;
    white-space: nowrap;
    box-sizing: border-box;
    transform: translatex(100vw);
    display: flex;
    justify-content: right;
    padding-right: 10px;

    /* ie workaround */
    -ms-transform: translatex(-100vw);
    &:last-child {
      margin-bottom: 2em;
    }
    a {
      display: flex;
      text-decoration: none;
      color: $text;
      text-align: center;
      align-items: center;
      font-size: calc(24px - 0.5vw);

      @media (min-width: 768px) {
        text-align: right;
        padding: 0.5rem;
        max-width: 170px;
      }
      &:hover {
        cursor: pointer;
        @include alpha-attribute("background-color", rgba($green, 0.5), black);
      }
    }
  }
}

input.hamburger {
  display: none;
  height: 30px;
  width: 35px;

  @media (max-width: 700px) {
    height: 30px;
    width: 30px;
  }

  &:checked {
    & ~ .drawer-list {
      transform: translatex(0);
      border-bottom-right-radius: 0;
      li {
        transform: translatex(0);
        @include transition;
        a {
          padding-right: 15px;
        }
      }
    }
    & ~ label {
      > i {
        background-color: transparent;
        transform: rotate(90deg);
        &:before {
          transform: translate(-50%, -50%) rotate(45deg);
          background-color: black;
        }
        &:after {
          transform: translate(-50%, -50%) rotate(-45deg);
          background-color: black;
        }
      }
      close {
        width: 100%;
      }
      open {
        color: rgba(0, 0, 0, 0);
        width: 0;
      }
    }
  }
}

label.hamburger {
  z-index: 9999;
  position: relative;
  display: block;
  height: 35px;
  width: 40px;
  @media (max-width: 700px) {
    height: 30px;
    width: 30px;
  }

  &:hover {
    cursor: pointer;
  }
  text {
    close,
    open {
      text-transform: uppercase;
      font-size: 0.8em;
      align-text: center;
      position: absolute;
      transform: translateY(50px);
      text-align: center;
      overflow: hidden;
      transition: width 0.25s 0.35s, color 0.45s 0.35s;
    }
    close {
      color: rgba(0, 0, 0, 0);
      right: 0;
      width: 0;
    }
    open {
      color: $text;
      width: 100%;
    }
  }
  > i {
    position: absolute;
    width: 100%;
    height: 3px;
    left: 0;
    top: 50%;
    background-color: $green;
    pointer-events: auto;
    transition-duration: 0.35s;
    transition-delay: 0.35s;
    &:before,
    &:after {
      position: absolute;
      display: block;
      width: 100%;
      left: 50%;
      height: 3px;
      background-color: $green;
      content: "";
      transition: transform 0.35s;
      transform-origin: 50% 50%;
    }
    &:before {
      transform: translate(-50%, -14px);
      background-color: $green;
    }
    &:after {
      transform: translate(-50%, 14px);
    }
  }
}

label.hamburger {
  position: fixed;
  top: 15px;
  left: 15px;
}
svg {
  height: 25px;
  width: 25px;
  margin-right: 25px;
}

.container__routerlink {
  cursor: pointer;
  li {
    align-items: center;
  }

  .sign-in {
    display: flex;
    flex-direction: column;
    text-align: end;
    padding-right: 15px;

    p {
      margin: 0;
      font-size: 1rem;
    }
  }
}
.routerlink {
  p {
    width: 110px;
    white-space: normal;
    font-size: 1rem;

    @media (max-width: 700px) {
      width: auto;
    }
  }
}
